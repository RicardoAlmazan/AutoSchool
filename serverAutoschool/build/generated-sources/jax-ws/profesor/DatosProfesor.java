
package profesor;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "datosProfesor", targetNamespace = "http://profesor/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DatosProfesor {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNombre", targetNamespace = "http://profesor/", className = "profesor.GetNombre")
    @ResponseWrapper(localName = "getNombreResponse", targetNamespace = "http://profesor/", className = "profesor.GetNombreResponse")
    @Action(input = "http://profesor/datosProfesor/getNombreRequest", output = "http://profesor/datosProfesor/getNombreResponse")
    public String getNombre();

    /**
     * 
     * @param xEmail
     * @param xid
     * @param apePat
     * @param apeMat
     * @param xhuella
     * @param name
     * @param xPswd
     * @param xUsr
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modificaProfe", targetNamespace = "http://profesor/", className = "profesor.ModificaProfe")
    @ResponseWrapper(localName = "modificaProfeResponse", targetNamespace = "http://profesor/", className = "profesor.ModificaProfeResponse")
    @Action(input = "http://profesor/datosProfesor/modificaProfeRequest", output = "http://profesor/datosProfesor/modificaProfeResponse")
    public String modificaProfe(
        @WebParam(name = "xid", targetNamespace = "")
        String xid,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "apePat", targetNamespace = "")
        String apePat,
        @WebParam(name = "apeMat", targetNamespace = "")
        String apeMat,
        @WebParam(name = "xhuella", targetNamespace = "")
        String xhuella,
        @WebParam(name = "xUsr", targetNamespace = "")
        String xUsr,
        @WebParam(name = "xPswd", targetNamespace = "")
        String xPswd,
        @WebParam(name = "xEmail", targetNamespace = "")
        String xEmail);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getApePaterno", targetNamespace = "http://profesor/", className = "profesor.GetApePaterno")
    @ResponseWrapper(localName = "getApePaternoResponse", targetNamespace = "http://profesor/", className = "profesor.GetApePaternoResponse")
    @Action(input = "http://profesor/datosProfesor/getApePaternoRequest", output = "http://profesor/datosProfesor/getApePaternoResponse")
    public String getApePaterno();

    /**
     * 
     * @param usr
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTodosLosDatos", targetNamespace = "http://profesor/", className = "profesor.GetTodosLosDatos")
    @ResponseWrapper(localName = "getTodosLosDatosResponse", targetNamespace = "http://profesor/", className = "profesor.GetTodosLosDatosResponse")
    @Action(input = "http://profesor/datosProfesor/getTodosLosDatosRequest", output = "http://profesor/datosProfesor/getTodosLosDatosResponse")
    public String getTodosLosDatos(
        @WebParam(name = "usr", targetNamespace = "")
        String usr);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getApeMaterno", targetNamespace = "http://profesor/", className = "profesor.GetApeMaterno")
    @ResponseWrapper(localName = "getApeMaternoResponse", targetNamespace = "http://profesor/", className = "profesor.GetApeMaternoResponse")
    @Action(input = "http://profesor/datosProfesor/getApeMaternoRequest", output = "http://profesor/datosProfesor/getApeMaternoResponse")
    public String getApeMaterno();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHuella", targetNamespace = "http://profesor/", className = "profesor.GetHuella")
    @ResponseWrapper(localName = "getHuellaResponse", targetNamespace = "http://profesor/", className = "profesor.GetHuellaResponse")
    @Action(input = "http://profesor/datosProfesor/getHuellaRequest", output = "http://profesor/datosProfesor/getHuellaResponse")
    public String getHuella();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmail", targetNamespace = "http://profesor/", className = "profesor.GetEmail")
    @ResponseWrapper(localName = "getEmailResponse", targetNamespace = "http://profesor/", className = "profesor.GetEmailResponse")
    @Action(input = "http://profesor/datosProfesor/getEmailRequest", output = "http://profesor/datosProfesor/getEmailResponse")
    public String getEmail();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsr", targetNamespace = "http://profesor/", className = "profesor.GetUsr")
    @ResponseWrapper(localName = "getUsrResponse", targetNamespace = "http://profesor/", className = "profesor.GetUsrResponse")
    @Action(input = "http://profesor/datosProfesor/getUsrRequest", output = "http://profesor/datosProfesor/getUsrResponse")
    public String getUsr();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getContra", targetNamespace = "http://profesor/", className = "profesor.GetContra")
    @ResponseWrapper(localName = "getContraResponse", targetNamespace = "http://profesor/", className = "profesor.GetContraResponse")
    @Action(input = "http://profesor/datosProfesor/getContraRequest", output = "http://profesor/datosProfesor/getContraResponse")
    public String getContra();

    /**
     * 
     * @param usr
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consultaAlumnos", targetNamespace = "http://profesor/", className = "profesor.ConsultaAlumnos")
    @ResponseWrapper(localName = "consultaAlumnosResponse", targetNamespace = "http://profesor/", className = "profesor.ConsultaAlumnosResponse")
    @Action(input = "http://profesor/datosProfesor/consultaAlumnosRequest", output = "http://profesor/datosProfesor/consultaAlumnosResponse")
    public String consultaAlumnos(
        @WebParam(name = "usr", targetNamespace = "")
        String usr);

    /**
     * 
     * @param usr
     * @return
     *     returns java.util.List<profesor.AsistAlumnos>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "asistencia", targetNamespace = "http://profesor/", className = "profesor.Asistencia")
    @ResponseWrapper(localName = "asistenciaResponse", targetNamespace = "http://profesor/", className = "profesor.AsistenciaResponse")
    @Action(input = "http://profesor/datosProfesor/asistenciaRequest", output = "http://profesor/datosProfesor/asistenciaResponse")
    public List<AsistAlumnos> asistencia(
        @WebParam(name = "usr", targetNamespace = "")
        String usr);

}
